Android <iv>,<extra>,<to_encrypt> (string encode to BASE64 string) -> Gui -> (string decode from BASE64 to plain text string)
Gui encrypt plain text to_encrypt with plain text iv en password (present in the GUI) and plain text extra)
Gui (encrypt using AES <to_encrypt> and encode result to BASE64 string) send <encrypted>
Android <to_encrypt> decode BASE64 and compare with original

string -> to BASE64 string -> send -> received (GUI) -> from BASE64 -> use GUI.
encrypted -> to BASE64 string -> send -> received (ANDROID) -> from BASE64 plain text.

GUI request
<boinc_gui_rpc_request>
<authe1/>
</boinc_gui_rpc_request>\003

Reply from Boinc for Android if encryption is set
<boinc_gui_rpc_reply>
    <authe2>
        <iv1></iv1>   base64 Android to GUI
        <iv2></iv2>   base64 GUI to Android
        <encrypted><encrypted>
        <protocol>1</protocol>
    </authe2>
</boinc_gui_rpc_reply>\003

<iv> is a random 16 byte string encoded base64 for transport.
iv1 to GUI and iv2 back. Never reused iv.
<encrypted> is an encrypted 64 byte random hex string
<protocol> must match one of the known encryption protocols.
1 : AES/GCM

<iv> must be identical on both sides and randomized every send and reply
The GUI will decrypt <encrypted>
Add 2 random hex byte pairs before and after the string.
The new string will be encrypted and send in base64 for transport

The reply from the GUI
<boinc_gui_rpc_request>
    <auth_encrypted>
        <encrypted></encrypted> base64
    </auth_encrypted>
</boinc_gui_rpc_request>\003

<encrypted> after decryption and decoded from base64, strip the 2 hex bytes (4 chars) at the beginning and end of the string.
The result after stripping the extra hex bytes, must be the same random hex string,

After a match the reply wil be
<boinc_gui_rpc_reply>
    <auth_encrypted>
        <authorized/>
    </auth_encrypted>
</boinc_gui_rpc_reply>\003

If there is a mismatch, BOINC for Android will will wait for 5 seconds until is accepts the next request.
After 3 wrong passwords, the communication is blocked for 1 minute.
A second 3 mismatches will block for 5 minutes and increases by 5 minutes.
The timeout can be reset in the GUI settings menu.

The reply from BOINC for Android on an auth1 request during a timeout will be

<boinc_gui_rpc_reply>
    <auth_encrypted>
        <unauthorized/>
        <time_out>300</time_out> (300 seconds)
    </auth_encrypted>
</boinc_gui_rpc_reply>\003

WARNING: The <iv> must be not be reused after one completed request .

// https://github.com/BOINC/boinc/issues/4044
// https://www.cryptopp.com/wiki/GCM_Mode
// https://proandroiddev.com/security-best-practices-symmetric-encryption-with-aes-in-java-7616beaaade9
// https://medium.com/@rrohaill/aes-gcm-encryption-decryption-using-kotlin-7f08884eb15b
// https://github.com/phxql/kotlin-crypto-example/blob/master/src/main/kotlin/de/mkammerer/Crypto.kt
