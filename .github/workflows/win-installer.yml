# This file is part of BOINC.
# http://boinc.berkeley.edu
# Copyright (C) 2023 University of California
#
# BOINC is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# BOINC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BOINC.  If not, see <http://www.gnu.org/licenses/>.

name: Build Windows Installer
on:
  workflow_dispatch:
  push:
    branches: [ '5065-*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CERTIFICATE_SIGN: win_build\installer_wix\testcert.pfx # becomes secret var
  CERTIFICATE_PASS: testpass # becomes secret var
  # virtualbox vars here are for convenience, wix sources need to be updated also (name and guid)
  VBOX_URL: https://download.virtualbox.org/virtualbox/7.0.10/VirtualBox-7.0.10-158379-Win.exe
  VBOX_NAME: VirtualBox-7.0.10-158379-Win.exe
  VBOX_MD5: 8882a55227cccc8a3f7ab69641df19fd # keep lowercase
  VC2010_URL: https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x64.exe
  VC2010_NAME: vcredist_x64.exe
  VC2010_MD5: 02a945866cd1b13e2375c024f0e18301 # keep lowercase

jobs:
  prepare-package:
    name: Build packages
    runs-on: windows-2022
    strategy:
      matrix:
        platform: [ 'x64','arm64' ]
      fail-fast: false
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1
        with:
            vs-version: '[17.0,19)'

      - name: Fix vcpkg
        run: vcpkg.exe integrate remove

      - name: Restore cache
        uses: actions/cache/restore@v3
        id: cache-vcpkg
        with:
          path: "${{ github.workspace }}/3rdParty/Windows"
          key: 3rdParty-prep-${{matrix.platform}}

      - name: Build
        if: ${{ success() }}
        run: msbuild win_build\boinc.sln -p:Configuration=Release -p:Platform=${{matrix.platform}} -p:VcpkgTripletConfig=ci -m

      - name: Save cache
        if: ${{ success() && steps.cache-vcpkg.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v3
        with:
          path: "${{ github.workspace }}/3rdParty/Windows"
          key: 3rdParty-prep-${{matrix.platform}}

      - name: Prepare artifacts for deploy
        if: ${{ success() }}
        shell: cmd
        run: |
          python deploy\prepare_deployment.py win_client
          python deploy\prepare_deployment.py win_manager

      - name: Upload client
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: win_client_${{matrix.platform}}
          path: deploy/win_client.7z

      - name: Upload manager
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: win_manager_${{matrix.platform}}
          path: deploy/win_manager.7z

  build-installers:
    name: Build installers
    runs-on: windows-2022
    needs: prepare-package
    strategy:
      matrix:
        arch: ['x64','arm64']
        variant: [ '', 'vbox' ]
        exclude:
          - arch: arm64
            variant: vbox
      fail-fast: false
    defaults:
      run:
        shell: pwsh
    env:
      PREREQUISITES_PATH: "${{ github.workspace }}\\build\\prerequisites"
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install Wix
        uses: actions/checkout@v2
        with:
          repository: parvit/wix
          path: wix

      - name: Install MSBuild
        uses: microsoft/setup-msbuild@v1.1
        with:
            vs-version: '[17.0,19)'

      - name: Create build folders
        run: |
          New-Item -Path "${{ github.workspace }}\build" -ItemType directory
          New-Item -Path "${{ github.workspace }}\build\prerequisites" -ItemType directory

      - name: Restore cache
        uses: actions/cache/restore@v3
        id: cache-vcpkg
        with:
          path: "${{ github.workspace }}/3rdParty/Windows"
          key: 3rdParty-build-${{matrix.arch}}

      - name: Restore cached VirtualBox installer
        if: ${{ matrix.variant == 'vbox' }}
        id: cache-vbox-restore
        uses: actions/cache/restore@v3
        with:
          path: "${{ env.PREREQUISITES_PATH }}\\${{ env.VBOX_NAME }}"
          key: ${{ env.VBOX_NAME }}-${{ env.VBOX_MD5 }}

      - name: Restore cached VC2010 installer
        if: ${{ matrix.arch == 'x64' }}
        id: cache-vc2010-restore
        uses: actions/cache/restore@v3
        with:
          path: "${{ env.PREREQUISITES_PATH }}\\${{ env.VC2010_NAME }}"
          key: ${{ env.VC2010_NAME }}-${{ env.VC2010_MD5 }}

      - name: Download prerequisite VirtualBox if needed
        if: ${{ matrix.variant == 'vbox' && steps.cache-vbox-restore.outputs.cache-hit != 'true' }}
        run: |
          # Download Virtualbox prerequisite
          Invoke-WebRequest -Uri "${{ env.VBOX_URL }}" -TimeoutSec 60 -OutFile "${{ env.PREREQUISITES_PATH }}\\${{ env.VBOX_NAME }}"
          $md5 = (Get-FileHash "${{ env.PREREQUISITES_PATH }}\\${{ env.VBOX_NAME }}" -Algorithm MD5).Hash.ToLower()
          if ( !($md5 -eq "${{ env.VBOX_MD5 }}") ) {
            throw "VirtualBox installer download failed"
          }

      - name: Download prerequisite VC2010 if needed
        if: ${{ matrix.arch == 'x64' && steps.cache-vc2010-restore.outputs.cache-hit != 'true' }}
        run: |
          # Download VC2010 prerequisite
          Invoke-WebRequest -Uri "${{ env.VC2010_URL }}" -TimeoutSec 60 -OutFile "${{ env.PREREQUISITES_PATH }}\\${{ env.VC2010_NAME }}"
          $md5 = (Get-FileHash "${{ env.PREREQUISITES_PATH }}\\${{ env.VC2010_NAME }}" -Algorithm MD5).Hash.ToLower()
          if ( !($md5 -eq "${{ env.VC2010_MD5 }}") ) {
            throw "VisualStudio2010 redistributable installer download failed"
          }

      - name: Save prerequisite VirtualBox if needed
        if: ${{ matrix.variant == 'vbox' && steps.cache-vbox-restore.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v3
        with:
          path: "${{ env.PREREQUISITES_PATH }}\\${{ env.VBOX_NAME }}"
          key: ${{ env.VBOX_NAME }}-${{ env.VBOX_MD5 }}

      - name: Save prerequisite VC2010 if needed
        if: ${{ matrix.arch == 'x64' && steps.cache-vc2010-restore.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v3
        with:
          path: "${{ env.PREREQUISITES_PATH }}\\${{ env.VC2010_NAME }}"
          key: ${{ env.VC2010_NAME }}-${{ env.VC2010_MD5 }}

      - name: Download Client Artifact
        if: ${{ success() }}
        uses: actions/download-artifact@v3
        with:
          name: win_client_${{ matrix.arch }}
          path: pkgs/
  
      - name: Download Manager Artifact
        if: ${{ success() }}
        uses: actions/download-artifact@v3
        with:
          name: win_manager_${{ matrix.arch }}
          path: pkgs/

      - name: Decompress Artifacts
        if: ${{ success() }}
        run: |
          pushd "${{ github.workspace }}\build"
          7z x "${{ github.workspace }}\pkgs\win_client.7z"
          7z x "${{ github.workspace }}\pkgs\win_manager.7z"
          ls -R .

      - name: Build installer
        if: ${{ success() && matrix.variant != '' }}
        run: |
          $env:PATH = "${{ github.workspace }}\wix\bin\;" + $env:PATH
          $env:WIX = "${{ github.workspace }}\wix\bin\"
          pwsh -noninteractive -f .\installer.ps1 -Type "${{ matrix.arch }}_${{ matrix.variant }}" `
               -CI -Certificate "${{ github.workspace }}\${{env.CERTIFICATE_SIGN}}" `
               -CertificatePass "${{ env.CERTIFICATE_PASS }}"

      - name: Build installer
        if: ${{ success() && matrix.variant == '' }}
        run: |
          $env:PATH = "${{ github.workspace }}\wix\bin\;" + $env:PATH
          $env:WIX = "${{ github.workspace }}\wix\bin\"
          pwsh -noninteractive -f .\installer.ps1 -Type "${{ matrix.arch }}" `
               -CI -Certificate "${{ github.workspace }}\${{env.CERTIFICATE_SIGN}}" `
               -CertificatePass "${{ env.CERTIFICATE_PASS }}"

      - name: Save cache
        if: ${{ success() && steps.cache-vcpkg.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v3
        with:
          path: "${{ github.workspace }}/3rdParty/Windows"
          key: 3rdParty-build-${{matrix.arch}}

      - name: Upload installer
        if: ${{ success() && matrix.variant != '' }}
        uses: actions/upload-artifact@v3
        with:
          name: boinc_bundle_${{ matrix.arch }}_${{ matrix.variant }}
          path: build/boinc_${{ matrix.variant }}_bundle.exe

      - name: Upload installer
        if: ${{ success() && matrix.variant == '' }}
        uses: actions/upload-artifact@v3
        with:
          name: boinc_bundle_${{ matrix.arch }}
          path: build/boinc_bundle.exe
